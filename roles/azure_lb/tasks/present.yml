---
- set_fact:
    tags_list: "{{ tags_list | default([]) |
    union([[tag.key,tag.value]|join(':')]) }}"
  loop: "{{ lookup('dict', lb.tags | default({})) }}"
  loop_control:
    loop_var: "tag"

- name: Get load balancer
  azure_rm_loadbalancer_facts:
    client_id: "{{ azure_client_id | default(omit) }}"
    subscription_id: "{{ azure_subscription_id | default(omit) }}"
    secret: "{{ azure_secret | default(omit) }}"
    tenant: "{{ azure_tenant | default(omit) }}"
    resource_group: "{{ lb.resource_group }}"
    tags: "{{ tags_list | default(omit) }}"
    name: "{{ lb.name | default(omit) }}"
  register: azure_lb_facts

- name: Clear ip configuration list
  set_fact:
    ip_configurations: []

- name: Set subnet id
  include: subnetid.yml
  loop: "{{ lb.frontend_ip_configurations }}"
  loop_control:
    loop_var: "fipc"

- name: Create load balancer
  azure_rm_loadbalancer:
    client_id: "{{ azure_client_id | default(omit) }}"
    subscription_id: "{{ azure_subscription_id | default(omit) }}"
    secret: "{{ azure_secret | default(omit) }}"
    tenant: "{{ azure_tenant | default(omit) }}"
    name: "{{ lb.name }}"
    backend_address_pools: "{{ lb.backend_address_pools }}"
    frontend_ip_configurations: "{{ ip_configurations }}"
    inbound_nat_pools: "{{ lb.inbound_nat_pools | default(omit, true) }}"
    inbound_nat_rules: "{{ lb.inbound_nat_rules | default(omit, true) }}"
    load_balancing_rules: "{{ lb.load_balancing_rules | default(omit, true) }}"
    probes: "{{ lb.probes }}"
    resource_group: "{{ lb.resource_group }}"
    sku: "{{ lb.sku | default('Standard', true) }}"
    state: "present"
    append_tags: false
    tags: "{{ lb.tags | default(omit, true) }}"
  register: createlb
...
